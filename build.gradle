buildscript {
    ext {
        springBootVersion = '1.2.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'  

jar {
    baseName = 'rfid-tilt'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
}
dependencyManagement {
	imports { 	
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Angel.SR3" 
	}
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-amqp")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-cloud-connectors")
	//======================
	compile("org.springframework.boot:spring-cloud-starter-ribbon")
	compile("com.netflix.hystrix:hystrix-javanica:1.3.16")
	compile("com.netflix.hystrix:hystrix-metrics-event-stream:1.3.16")
	//==================
	compile("postgresql:postgresql:9.0-801.jdbc4")
	compile("mysql:mysql-connector-java:5.1.35")
	compile("org.flywaydb:flyway-core:3.2.1")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
